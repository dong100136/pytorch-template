exp_name: CarNet_v0
base_on: base.yaml
arch:
  type: UNet_v2
  args:
    backbone: mobilenet_v2
    num_classes: 1
    pretrained: True
    decoder_attention_type: scse
dataloader:
  type: CarvanaDataLoader
  args:
    batch_size: 16
    training: True
    num_workers: 8
    train_csv: &train_csv /root/dataset/carvana-image-masking-challenge/workspace/train.csv.fold0
    valid_csv: &valid_csv /root/dataset/carvana-image-masking-challenge/workspace/valid.csv.fold0
    img_size: [320, 480]
loss:
  type: BinaryDiceLoss
metrics:
  - accuracy
  - kaggle_IOU
trainer:
  type: BasicTrainer
  args:
    epochs: 500
    save_period: 1
    verbosity: 2
    monitor: min val_loss
    early_stop: 11
    tensorboard: False
    save_params_hist: False

#--------valid---------
valid_dataloader:
  type: CarvanaDataLoader
  args:
    train_csv: *valid_csv
    batch_size: 64
    training: False
    num_workers: 8
    # TTA: FLIP_UD
    img_size: [320, 480]
valid_metrics: [accuracy, kaggle_IOU]
valid_hook:
  - type: SaveSegTensor
    args:
      predict_path: masks
      target_path: targets

#--------predict---------
predictor:
  type: SegPredictor
predictor_hooks:
  - type: SaveSegTensor
    args:
      predict_path: masks
      target_path: targets
      img_size: [1280, 1918]
predict_dataloader:
  type: CarvanaDataLoader
  args:
    train_csv: /root/dataset/carvana-image-masking-challenge/workspace/test.csv
    batch_size: 64
    training: False
    num_workers: 16
    img_size: [320, 480]
    # TTA: FLIP_UD
